
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Student Home";
}

<section class="section profile">
    <div class="row">
        <div class="col-sm-8 offset-sm-2">

            <div class="row">
                <div class="col-xl-4">

                    <div class="card">
                        <div class="card-body profile-card pt-4 d-flex flex-column align-items-center">

                            <img src="image/approved/@Model.info.Student.ImageUrl" alt="Profile" class="rounded-circle">
                        </div>
                    </div>

                </div>

                <div class="col-xl-8">

                    <div class="card">
                        <div class="card-body pt-3">
                            
                            <ul class="nav nav-tabs nav-tabs-bordered">

                                <li class="nav-item">
                                    <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#profile-overview">Overview</button>
                                </li>

                                <li class="nav-item">
                                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-edit">Edit Profile</button>
                                </li>

                                <li class="nav-item">
                                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-settings">Card Info</button>
                                </li>

                                <li class="nav-item">
                                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#lectures">Lectures</button>
                                </li>
                                @*<li class="nav-item">
                                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-change-password">Change Password</button>
                            </li>*@
                            </ul>
                            
                            <div class="tab-content pt-2">

                                <partial name="partials/_details" />
                                
                                <partial name="partials/_profileEdit" />
                                
                                <partial name="partials/_card-info" />

                                <partial name="partials/_lectures" />

                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</section>
<partial name="_status"/>

@section Scripts {
    <script>
        const imageUpdateFunc = async ()=>{
            var form = getEl("#imgUpdate");

            var formData = new FormData(form);

            const res = await fetch("/student/imageUpdate", {
                method: "POST",
                body: formData
            })
            console.log(res)
            const data = await res.json()
            console.log(data)
            getEl("#requestMsg").innerText = data.msg
            getEl("#requestStatus").click();
        }
        const nameModification = async ()=>{
            var form = getEl("#nameMod");

            var formData = new FormData(form);

            const res = await fetch("/student/modifyName", {
                method: "POST",
                body: formData
            })
            console.log(res)
            const data = await res.json()
            getEl("#requestMsg").innerText = data.msg
            getEl("#requestStatus").click();
        }
        const joinLecture = async (ev)=>{

            const courseId = ev.target.getAttribute('courseId')
            const indexNo = ev.target.getAttribute('indexNo')
            const studentNo = ev.target.getAttribute('studentNo')
            
            const res = await fetch("/Student/JoinLecture", {
                method: "POST",
                headers: {
                    "Content-Type": "Application/json"
                },
                body: JSON.stringify({courseId, studentNo, indexNo })
            })
            const data = await res.json();
            console.log(data)
            if(data.status){
               var qrCont = document.createElement("div");
               qrCont.id = "qrcode";
               qrCont.style.width = "128px";
               qrCont.style.margin = "auto";
              
               getEl("#requestMsg").appendChild(qrCont);

               var qrcode = new QRCode(getEl("#qrcode"), {
                text: "Lecturer/AddStudent?reqHash=" + data.requestHash,
                width: 128,
                height: 128,
                colorDark : "#000000",
                colorLight : "#ffffff",
                correctLevel : QRCode.CorrectLevel.H
               });
            }else{
                getEl("#requestMsg").innerText = data.msg
            }
             getEl("#statusTitle").innerText = "Join Lecture";
            getEl("#requestStatus").click();
        }
        const getEl = (arg)=>{
            return document.querySelector(arg);
        }

        const getQRCode = (el, url)=>{
            var qrcode = new QRCode(el, {
                text: url,
                width: 128,
                height: 128,
                colorDark : "#000000",
                colorLight : "#ffffff",
                correctLevel : QRCode.CorrectLevel.H
            });
        }
        window.onload = () => {
         // Set The Preview Image During Image Update Request
                (()=>{
                    const fileInput = document.querySelector('.new-img');
                    const previewImage = document.getElementById('previewImg');

                    fileInput.addEventListener('change', function (event) {
                     const file = event.target.files[0];

                        if (file) {
                            const reader = new FileReader();

                            reader.addEventListener('load', function () {
                                previewImage.setAttribute('src', reader.result);
                            });

                            reader.readAsDataURL(file);
                        }
                    });
                })()

                
            getEl('#nameModBtn').addEventListener('click', nameModification)
            getEl('#imgUpdateBtn').addEventListener('click', imageUpdateFunc)
            
            const lecBtns = document.querySelectorAll('.lectBtn');
            lecBtns.forEach(element => {
                element.addEventListener('click', event=>joinLecture(event)
            );
        });
            
  
        }
    </script>
}